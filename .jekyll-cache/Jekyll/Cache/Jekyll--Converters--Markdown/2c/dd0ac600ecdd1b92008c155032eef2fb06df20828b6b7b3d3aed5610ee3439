I"M<blockquote>
  <p>본 프로젝트는 숭실대학교에서 김명호 교수님, 김영종 교수님의 지도하에 진행되었습니다.</p>
</blockquote>

<hr />

<h2 id="ssustack">ssustack</h2>

<p>ssustack 프로젝트는 Ubuntu 환경에서 OpenStack을 자동으로 설치하여 클라우드 컴퓨팅을 손쉽게 구축할 수 있도록 만들어졌습니다.</p>

<p>OpenStack에서 사용할 기본적인 설정을 정의한 후에 설치스크립트를 이용하여 간편하게 설치가 가능합니다.</p>

<p><br /></p>

<h3 id="environment">Environment</h3>

<ul>
  <li>OpenStack : Rokcy Release</li>
  <li>OS : Ubuntu 18.04 LTS</li>
</ul>

<p><br /></p>

<h3 id="minimum-hardware-requirements">Minimum hardware requirements</h3>

<ul>
  <li>Controller node
    <ul>
      <li>Processor: 1 Core</li>
      <li>Ram: 4GB</li>
      <li>Storage: 5GB</li>
    </ul>
  </li>
  <li>Compute node
    <ul>
      <li>Processor: 1 Core</li>
      <li>Ram: 2GB</li>
      <li>Storage: 10GB</li>
    </ul>
  </li>
</ul>

<p><br /></p>

<h3 id="노드별-설치-패키지">노드별 설치 패키지</h3>

<p><img src="/static/assets/img/landing/node_packages.png" alt="node_packages" width="600" height="280" /></p>

<p><br /></p>

<h3 id="installation">Installation</h3>

<p>다음 설명할 설치 방법은 모든 노드가 Ubuntu 18.04 운영체제만 설치된 환경이라 가정하고 진행해야 할 작업을 설명합니다.</p>

<p><br /></p>

<h4 id="1-ssustack-클론">1. ssustack 클론</h4>

<p>OpenStack 환경을 구성하는 모든 노드에서 진행</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ git clone http://git.dotstack.io/crisis513/ssustack.git
$ cd ssustack/bin
$ ./ssustack_user_creation.sh
$ cp -r &lt;your_controller_path&gt;/ssustack/ .
</code></pre></div></div>

<p>생성할 유저의 패스워드를 설정하여 ssustack 유저가 생성되면 ssustack 폴더를 ssustack 유저의 홈 디렉토리로 복사합니다.</p>

<p><br /></p>

<h4 id="2-hosts-및-ssh-설정">2. hosts 및 SSH 설정</h4>

<p>위의 작업이 끝나면 controller node에서 hosts 및 SSH 설정</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ sudo vi /etc/hosts
10.10.10.11 controller-node
10.10.10.21 compute-node1 
10.10.10.22 compute-node2
10.10.10.23 compute-node3
    
$ cd ssustack/bin/
$ ./creating_ssh_keys.sh [&lt;host_name&gt; ... ]
ex) ./creating_ssh_keys.sh compute-node1 compute-node2 compute-node3
</code></pre></div></div>

<p><br /></p>

<h4 id="3-openstack-설치-스크립트-설정">3. OpenStack 설치 스크립트 설정</h4>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ cd ..
$ vi local.conf
</code></pre></div></div>

<p><br /></p>

<h4 id="4-localconf-설정을-기반으로-각-노드별-스크립트-생성">4. local.conf 설정을 기반으로 각 노드별 스크립트 생성</h4>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ ./ssustack.sh
</code></pre></div></div>

<p><br /></p>

<h4 id="5-ssustacktmp-경로에서-각-노드에-맞는-스크립트-실행">5. ssustack/tmp 경로에서 각 노드에 맞는 스크립트 실행</h4>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## controller-node Case
$ cd tmp/controller/
$ ./controller.sh

## compute-node1 Case
$ cd tmp/compute/
$ ./compute_1.sh
 
## compute-node2 Case
$ cd tmp/compute/
$ ./compute_2.sh
 
## compute-node3 Case
$ cd tmp/compute/
$ ./compute_3.sh
</code></pre></div></div>

<blockquote>
  <p>현재는 각 스크립트를 직접 수정하여 rbd_secret_uuid 값을 수동으로 맞춰주어야 합니다.</p>
</blockquote>

<p><br /></p>

<h4 id="6-controller-node에서-ceph-추가-설정">6. controller node에서 ceph 추가 설정</h4>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ cd ../../bin/ # ssustack/bin/
$ ./ceph_configuration.sh [&lt;host_name&gt; ... ]
ex) ./ceph_configuration.sh compute-node1 compute-node2 compute-node3 
</code></pre></div></div>

<p><br /></p>

<h4 id="7-각-compute-node에서-ceph-osd-및-ceph-mon-설정">7. 각 compute node에서 ceph osd 및 ceph mon 설정</h4>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ cd ../../bin/ # ssustack/bin/
$ ./add_ceph_osd.sh /dev/sdb    # /dev/sdb는 각 컴퓨터 노드에서 추가할 osd 장치명
$ ./add_ceph_mon.sh 10.10.10.21 # 10.10.10.21은 각 컴퓨터 노드에서 management network로 사용하는 ip
</code></pre></div></div>

<p><br /></p>

<h4 id="8-controller-node에서-compute-호스트를-찾도록-스크립트-실행">8. controller node에서 compute 호스트를 찾도록 스크립트 실행</h4>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ ./add_compute_node.sh
</code></pre></div></div>
:ET