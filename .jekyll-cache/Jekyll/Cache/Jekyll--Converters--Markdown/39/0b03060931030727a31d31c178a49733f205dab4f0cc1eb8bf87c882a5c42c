I"<<h1 id="ssustack_installer">ssustack_installer</h1>

<p>ssustack_installer 프로젝트는 ssustack 설치를 웹 브라우저에서 더욱 쉽게 설치할 수 있도록 도와줍니다.</p>

<p>ssustack_installer를 실행하면 웹 브라우저가 뜨게되고, 필요한 설정을 입력 및 선택하면 ssustack 스크립트를 기반으로 설치가 시작됩니다.</p>

<p>사용자의 선택에 따라 싱글노드 혹은 멀티호스트로 자유롭게 설치가 가능하며</p>

<p><br /></p>

<h3 id="environment">Environment</h3>

<p>OpenStack : Rokcy Release</p>

<p>OS : Ubuntu 18.04 LTS</p>

<p><br /></p>

<h3 id="installation">Installation</h3>

<h4 id="1-ssustack-클론">1. ssustack 클론</h4>

<p>OpenStack 환경을 구성하는 모든 노드에서 진행</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ git clone http://git.dotstack.io/crisis513/ssustack.git
$ cd ssustack/bin
$ ./ssustack_user_creation.sh
$ cp -r &lt;your_controller_path&gt;/ssustack/ .
</code></pre></div></div>

<p>생성할 유저의 패스워드를 설정하여 ssustack 유저가 생성되면 ssustack 폴더를 ssustack 유저의 홈 디렉토리로 복사한다.</p>

<p><br /></p>

<h4 id="2-hosts-및-ssh-설정">2. hosts 및 SSH 설정</h4>

<p>위의 작업이 끝나면 controller node에서 hosts 및 SSH 설정</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ sudo vi /etc/hosts
10.10.10.11 controller-node
10.10.10.21 compute-node1 
10.10.10.22 compute-node2
10.10.10.23 compute-node3
    
$ cd ssustack/bin/
$ ./creating_ssh_keys.sh [&lt;host_name&gt; ... ]
ex) ./creating_ssh_keys.sh compute-node1 compute-node2 compute-node3
</code></pre></div></div>

<p><br /></p>

<h4 id="3-openstack-설치-스크립트-설정">3. OpenStack 설치 스크립트 설정</h4>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ cd ..
$ vi local.conf
</code></pre></div></div>

<p><br /></p>

<h4 id="4-localconf-설정을-기반으로-각-노드별-스크립트-생성">4. local.conf 설정을 기반으로 각 노드별 스크립트 생성</h4>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ ./ssustack.sh
</code></pre></div></div>

<p><br /></p>

<h4 id="5-ssustacktmp-경로에서-각-노드에-맞는-스크립트-실행">5. ssustack/tmp 경로에서 각 노드에 맞는 스크립트 실행</h4>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## controller-node Case
$ cd tmp/controller/
$ ./controller.sh

## compute-node1 Case
$ cd tmp/compute/
$ ./compute_1.sh
 
## compute-node2 Case
$ cd tmp/compute/
$ ./compute_2.sh
 
## compute-node3 Case
$ cd tmp/compute/
$ ./compute_3.sh
</code></pre></div></div>

<blockquote>
  <p>현재는 각 스크립트를 직접 수정하여 rbd_secret_uuid 값을 수동으로 맞춰주어야 함..</p>
</blockquote>

<p><br /></p>

<h4 id="6-controller-node에서-ceph-추가-설정">6. controller node에서 ceph 추가 설정</h4>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ cd ../../bin/ # ssustack/bin/
$ ./ceph_configuration.sh [&lt;host_name&gt; ... ]
ex) ./ceph_configuration.sh compute-node1 compute-node2 compute-node3 
</code></pre></div></div>

<p><br /></p>

<h4 id="7-각-compute-node에서-ceph-osd-및-ceph-mon-설정">7. 각 compute node에서 ceph osd 및 ceph mon 설정</h4>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ cd ../../bin/ # ssustack/bin/
$ ./add_ceph_osd.sh /dev/sdb    # /dev/sdb는 각 컴퓨터 노드에서 추가할 osd 장치명
$ ./add_ceph_mon.sh 10.10.10.21 # 10.10.10.21은 각 컴퓨터 노드에서 management network로 사용하는 ip
</code></pre></div></div>

<p><br /></p>

<h4 id="8-controller-node에서-compute-호스트를-찾도록-스크립트-실행">8. controller node에서 compute 호스트를 찾도록 스크립트 실행</h4>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ ./add_compute_node.sh
</code></pre></div></div>

<p><br /></p>

<h3 id="testing-video">Testing video</h3>

<video width="840" height="480" src="/static/assets/video/ssustack_working.mp4" controls=""></video>

<blockquote>
  <p>영상이 재생되지 않는다면 IE 환경에서 다시 재생해보세요.</p>
</blockquote>
:ET